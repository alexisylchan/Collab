message("Configuring h5py:\n@h5py_binary@\n@HDF5_DIR@")
set(ENV{LD_LIBRARY_PATH} "@HDF5_install@/lib")
set(ENV{DYLD_LIBRARY_PATH} "@HDF5_install@/lib")
set(ENV{VS_UNICODE_OUTPUT} "")

include("@ParaViewSuperBuild_CMAKE_BINARY_DIR@/paraview_common_environment.cmake")

if(WIN32)
  file(TO_NATIVE_PATH "@HDF5_install@" hdf5_install)
  set(ENV{HDF5_DIR} "${hdf5_install}")
  set(ENV{CL} "@pv_tpl_c_flags@")
else()
  set(ENV{CPPFLAGS} "@pv_tpl_cxx_flags@ @paraview_osx_flags@")
  set(ENV{CXXFLAGS} "@pv_tpl_cxx_flags@ @paraview_osx_flags@")
  set(ENV{CFLAGS} "@pv_tpl_c_flags@ @paraview_osx_flags@")
endif()

if(WIN32)

  execute_process(
    COMMAND "@PYTHON_EXECUTABLE@" setup.py configure --api=18
    WORKING_DIRECTORY "@h5py_binary@"
    RESULT_VARIABLE res
  )
else()
  execute_process(
    COMMAND "@PYTHON_EXECUTABLE@" setup.py configure --hdf5=@HDF5_install@ --api=18
    WORKING_DIRECTORY "@h5py_binary@"
    RESULT_VARIABLE res
  )
endif()

if(NOT ${res} EQUAL 0)
  message(FATAL_ERROR "Error in config of h5py")
endif()
message("h5py config worked.")
